These are all txt files containing deployment steps for postgres, mysql and mongo db on ubuntu 24:

---
## STEPS TO DEPLOY A STATIC WEBSITE ON A UBUNTU SERVER WITH NGINX:

# GET UPDATES
sudo apt update

# INSTALL NGINX  
sudo apt install nginx -y

# CLONE THE CODE FROM GITHUB
git clone https://github.com/GerromeSieger/Static-Site.git

# LOOK AT NGINX CONFIGURATION FILE (Optional)
sudo nano /etc/nginx/sites-enabled/default

# COPY CODE THAT WAS CLONED FROM GITHUB TO WHERE NGINX IS EXPECTING THE STATIC CONTENT
sudo cp -r Static-Site/* /var/www/html

# RESTART THE NGINX SERVICE
sudo systemctl restart nginx 
---
## STEPS TO DEPLOY A VUEJS SITE ON A UBUNTU SERVER WITH NGINX:

# GET UPDATES
sudo apt update

# DOWNLOAD A BASH SCRIPT THAT WOULD UPDATE THE NODESOURCE TO VERSION 18
curl -sL https://deb.nodesource.com/setup_18.x -o nodesource_setup.sh

# RUN THE BASH SCRIPT
sudo bash nodesource_setup.sh

# INSTALL NGINX & NODEJS
sudo apt install nginx nodejs -y

# INSTALL YARN (OPTIONAL)
sudo npm install -g yarn

# CLONE THE CODE FROM GITHUB
git clone https://github.com/GerromeSieger/Vuejs-Site.git  

# CHANGE DIRECTORY INTO THE CLONED REPO AND INSTALL DEPENDENCIES WITH npm OR yarn
cd Vuejs-Site
npm install
  #or 
yarn install

# BUILD THE FINAL CODE INTO A FOLDER
npm run build
  #or 
yarn build

# COPY THE CONTENT OF THE FOLDER TO WHERE NGINX IS EXPECTING THE WEB CONTENT
sudo cp -r dist/* /var/www/html

# RESTART THE NGINX SERVICE  
sudo systemctl restart nginx
--- 
## STEPS TO DEPLOY A REACT SITE ON A UBUNTU SERVER WITH NGINX:

# GET UPDATES
sudo apt update

# DOWNLOAD A BASH SCRIPT THAT WOULD UPDATE THE NODESOURCE TO VERSION 18
curl -sL https://deb.nodesource.com/setup_18.x -o nodesource_setup.sh

# RUN THE BASH SCRIPT
sudo bash nodesource_setup.sh

# INSTALL NGINX & NODEJS
sudo apt install nginx nodejs -y

# INSTALL YARN (OPTIONAL)
sudo npm install -g yarn

# CLONE THE CODE FROM GITHUB
git clone https://github.com/GerromeSieger/React-Site.git  

# CHANGE DIRECTORY INTO THE CLONED REPO AND INSTALL DEPENDENCIES WITH npm OR yarn
cd React-Site
npm install
  #or 
yarn install

# BUILD THE FINAL CODE INTO A FOLDER
npm run build
  #or 
yarn build

# COPY THE CONTENT OF THE FOLDER TO WHERE NGINX IS EXPECTING THE WEB CONTENT
sudo cp -r build/* /var/www/html

# RESTART THE NGINX SERVICE
sudo systemctl restart nginx
---
## STEPS TO DEPLOY A NEXTJS SITE ON A UBUNTU SERVER WITH NGINX:

# GET UPDATES
sudo apt update

# DOWNLOAD A BASH SCRIPT THAT WOULD UPDATE THE NODESOURCE TO VERSION 18
curl -sL https://deb.nodesource.com/setup_18.x -o nodesource_setup.sh

# RUN THE BASH SCRIPT
sudo bash nodesource_setup.sh

# INSTALL NGINX & NODEJS
sudo apt install nginx nodejs -y

# INSTALL YARN (OPTIONAL)
sudo npm install -g yarn

# CLONE THE CODE FROM GITHUB
git clone https://github.com/GerromeSieger/Nextjs-Site.git  

# CHANGE DIRECTORY INTO THE CLONED REPO AND INSTALL DEPENDENCIES WITH npm OR yarn
cd Nextjs-Site
npm install
  #or 
yarn install

# BUILD THE FINAL CODE INTO A FOLDER
npm run build
  #or 
yarn build

# RUN APP 
npm run start
  #or
yarn start
---

I want 4 seperate .MD files and structure the steps better and edit and optimize       