pipeline {
    agent any

    stages {
        stage('Build with Maven') {
            agent {
                docker {
                    image 'maven:3.9-eclipse-temurin-17'
                    args '-u root'
                    reuseNode true
                }
            }
            steps {
                script {
                    try {
                        echo 'Building the project...'
                        sh 'mvn -B package --file pom.xml'

                        echo 'Archiving the generated artifact...'
                        archiveArtifacts artifacts: 'target/*.jar', fingerprint: true

                        echo 'Build completed successfully.'
                    } catch (Exception e) {
                        echo "Error occurred during the build process: ${e.message}"
                        currentBuild.result = 'FAILURE' // Mark the build as failed
                        throw e // Re-throw the exception to stop the pipeline
                    }
                }
            }
            post {
                always {
                    echo 'Cleaning up Docker image...'
                    sh 'docker rmi maven:3.9-eclipse-temurin-17 || true'
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            cleanWs()
        }
    }
}