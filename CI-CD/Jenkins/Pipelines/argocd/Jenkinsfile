pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = credentials('docker-image')
        HOST_IP = credentials('host-ip')
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-cred')
        DOCKER_TAG = sh(script: "echo ${GIT_COMMIT.take(7)}", returnStdout: true).trim()
    }
    }
    stages {
        stage('Test') {
            environment {
                SONAR_TOKEN = credentials('SONAR_TOKEN')
                SONAR_HOST_URL = credentials('SONAR_HOST_URL')
                PROJECT_KEY = credentials('PROJECT_KEY')
            } 
            agent {
                docker { image 'sonarsource/sonar-scanner-cli:latest' }  
            }
            steps {
                script {
                    sh """
                        sonar-scanner \
                        -Dsonar.projectKey=${PROJECT_KEY} \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=${SONAR_HOST_URL} \
                        -Dsonar.login=${SONAR_TOKEN}
                    """
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                    def customImage = docker.build("${DOCKER_IMAGE}${DOCKER_TAG}")
                    customImage.push()
                    customImage.push('latest')
                    sh 'docker logout'
                }
            }
        }

        stage('Deploy') {
            when {
                branch 'main'
            }
            steps {
                withCredentials([string(credentialsId: 'manifest-repo-pat', variable: 'MANIFEST_REPO_PAT')]) {
                    sh '''
                        git clone https://x-access-token:${MANIFEST_REPO_PAT}@${K8S_MANIFEST_REPO} k8s-manifests
                        cd k8s-manifests
                        git config user.name "Jenkins"
                        git config user.email "jenkins@example.com"
                        git pull origin main
                        sed -i "s|image:.*|image: ${DOCKER_IMAGE}:${DOCKER_TAG}|" k8s/app.yml
                        git add .
                        git commit -m "Update image tag to ${DOCKER_TAG}" || echo "No changes to commit"
                        git push origin main
                    '''
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }