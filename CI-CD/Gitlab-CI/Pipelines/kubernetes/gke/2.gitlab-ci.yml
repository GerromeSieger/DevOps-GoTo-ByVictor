stages:
  - build
  - deploy

variables:
  DOCKER_TAG: ${CI_COMMIT_SHA}
  
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind  
  before_script:
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  script:
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
  only:
    - main

deploy:
  image: ubuntu:22.04
  stage: deploy
  needs:
    - build
  before_script:
    - apt-get update
    - apt-get install -y apt-transport-https ca-certificates gnupg curl
    - echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
    - apt-get update
    - apt-get install -y google-cloud-sdk google-cloud-sdk-gke-gcloud-auth-plugin kubectl git
  script:
    - gcloud auth activate-refresh-token "$GCP_CLIENT_ID" "$GCP_REFRESH_TOKEN"
    - gcloud config set project "$GCP_PROJECT_ID"
    - gcloud container clusters get-credentials "$GKE_CLUSTER_NAME" --zone "$GKE_CLUSTER_ZONE" 
    - kubectl get nodes
    - git clone https://${CI_USERNAME}:${CI_PASSWORD}@${K8S_MANIFEST_REPO} k8s-repo
    - |-
      awk -v image="${DOCKER_IMAGE}:${DOCKER_TAG}" '
        /image:/ {$0 = "        image: " image}
        {print}
      ' k8s-repo/app.yml > temp.yml && mv temp.yml k8s-repo/app.yml
    - kubectl apply -f k8s-repo/
  only:
    - main