stages:
  - build
  - deploy

variables:
  DOCKER_TAG: ${CI_COMMIT_SHA}
  
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind  
  before_script:
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  script:
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
  only:
    - main

deploy:
  image: google/cloud-sdk:slim
  stage: deploy
  id_tokens:
    GITLAB_OIDC_TOKEN:
      aud: https://iam.googleapis.com/projects/${GCP_PROJECT_NUMBER}/locations/global/workloadIdentityPools/${WORKLOAD_IDENTITY_POOL_ID}/providers/${WORKLOAD_IDENTITY_PROVIDER_ID}
  needs:
    - build
  before_script:
    # Configure workload identity
    - echo "$GITLAB_OIDC_TOKEN" > token.txt
    - gcloud iam workload-identity-pools create-cred-config "projects/${GCP_PROJECT_NUMBER}/locations/global/workloadIdentityPools/${WORKLOAD_IDENTITY_POOL_ID}/providers/${WORKLOAD_IDENTITY_PROVIDER_ID}" --service-account="${SERVICE_ACCOUNT_EMAIL}" --service-account-token-lifetime-seconds=3600 --output-file="$CI_PROJECT_DIR/credentials.json" --credential-source-file="token.txt"
    
    # Set credentials and authenticate
    - export GOOGLE_APPLICATION_CREDENTIALS="$CI_PROJECT_DIR/credentials.json"
    - gcloud auth login --cred-file="$CI_PROJECT_DIR/credentials.json"
    
    # Verify authentication worked
    - gcloud auth list
    
    # Set the project and install required tools
    - gcloud config set project "${GCP_PROJECT_ID}"
    - apt-get update && apt-get install -y kubectl google-cloud-sdk-gke-gcloud-auth-plugin
    - export USE_GKE_GCLOUD_AUTH_PLUGIN=True
    
    # Get GKE credentials
    - gcloud container clusters get-credentials "${GKE_CLUSTER_NAME}" --zone "${GKE_CLUSTER_ZONE}"
    
  script:
    # Verify connection to the cluster
    - kubectl get nodes

    # Deploy kubernetes resources
    - |-
      awk -v image="${DOCKER_IMAGE}:${DOCKER_TAG}" '
        /image:/ {$0 = "        image: " image}
        {print}
      ' k8s/app.yml > temp.yml && mv temp.yml k8s/app.yml
    
    # Apply the updated manifests
    - kubectl apply -f k8s/
  only:
    - main