---
version: 2
plan:
  project-key: GER
  key: BUILD
  name: React-Site-Build

stages:
  - Build:
      jobs:
        - Build
  - Test:
      jobs:
        - Test
      manual: false
      final: false

# === BUILD JOB ===
Build:
  artifacts:
    - name: react-app
      location: build
      pattern: "**/*"
      shared: true
  tasks:
  - any-task:
      plugin-key: com.atlassian.bamboo.plugins.bamboo-nodejs-plugin:task.builder.npm
      configuration:
        runtime: Node.js
        command: install
      description: Install dependencies
  - any-task:
      plugin-key: com.atlassian.bamboo.plugins.bamboo-nodejs-plugin:task.builder.npm
      configuration:
        runtime: Node.js
        command: run build
      description: Build App      

# === TEST JOB ===
Test:
  tasks:
    - checkout:
        force-clean-build: 'true'
    - artifact-download:
        artifacts:
          - name: react-app
            destination: build
    - script:
        interpreter: SHELL
        scripts:
          - |
            set -e

            echo "Cleaning up previous container (if exists)"
            docker rm -f test-runner || true

            echo "Starting test container"
            docker run -d --name test-runner ubuntu:latest tail -f /dev/null

            echo "Copying build and test script into container"
            docker cp . test-runner:/app

            echo "Running test script inside container"
            docker exec -w /app test-runner sh -c "
              chmod +x tester.sh &&
              ./tester.sh
            "

            echo "Cleaning up container"
            docker stop test-runner
            docker rm test-runner

---
version: 2

release-naming:
  next-version-name: release-1.1
  applies-to-branches: true
  auto-increment: true

environments:
  - deployment
      
deployment:
  name: React-Site-Deployment
  source-plan: GER-BUILD
  triggers: 
    - build-success  
  tasks:
    - artifact-download:
        artifacts:
          - name: react-app
            destination: build
    - scp:
        host: ${bamboo.DEPLOY_HOST_SECRET}
        local-path: build
        destination-path: /home/ubuntu/
        authentication:
          username: ${bamboo.DEPLOY_USER_SECRET}
          shared-credentials: SSHKEY
        description: SCP-TO-SERVER    
    - ssh:
        host: ${bamboo.DEPLOY_HOST_SECRET}
        authentication:
            username: ${bamboo.DEPLOY_USER_SECRET}
            shared-credentials: SSHKEY
        description: SSH-To-Remote-Server
        command: |
          echo "Deployment completed successfully"