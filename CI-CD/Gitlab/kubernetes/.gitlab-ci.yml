stages:
  - test
  - build
  - deploy

variables:
  DOCKER_TAG: ${CI_COMMIT_SHORT_SHA}  

.test:
  stage: test
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
      -Dsonar.projectKey=${PROJECT_KEY}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONAR_HOST_URL}
      -Dsonar.login=${SONAR_TOKEN}
  only:
    - main      
#  allow_failure: true

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind  
  before_script:
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  script:
    - docker build -t $DOCKER_IMAGE:${CI_COMMIT_SHORT_SHA} .
    - docker push $DOCKER_IMAGE:${CI_COMMIT_SHORT_SHA}
  only:
    - main

deploy:
  stage: deploy
  image: ubuntu:22.04
  before_script:
    - mkdir -p $HOME/.kube
    - echo "$KUBECONFIG_CONTENT" >> $HOME/.kube/config
    - chmod 600 $HOME/.kube/config
    - apt update && apt install curl git -y
    - curl -LO "https://dl.k8s.io/release/v1.28.0/bin/linux/amd64/kubectl"
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
  script:
    - git clone https://${CI_USERNAME}:${CI_PASSWORD}@${K8S_MANIFEST_REPO} k8s-manifests
    - kubectl get nodes
  only:
    - main